const mongoose = require('mongoose');
const Room = require('../models/Room');

const MONGODB_URI = process.env.MONGODB_URI;

if (!MONGODB_URI) {
  console.error('‚ùå MONGODB_URI non d√©finie dans les variables d\'environnement');
  process.exit(1);
}

async function checkRooms() {
  try {
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    // R√©cup√©rer toutes les chambres
    const rooms = await Room.find({});
    console.log(`üìä Total des chambres: ${rooms.length}`);

    if (rooms.length === 0) {
      console.log('‚ùå Aucune chambre trouv√©e dans la base de donn√©es');
      return;
    }

    // V√©rifier chaque chambre
    let validRooms = 0;
    let invalidRooms = 0;

    rooms.forEach((room, index) => {
      console.log(`\nüè† Chambre ${index + 1}:`);
      console.log(`   ID: ${room._id}`);
      console.log(`   Nom: ${room.name}`);
      console.log(`   Prix: ${room.price}`);
      console.log(`   Disponible: ${room.isAvailable}`);
      console.log(`   Capacit√©: ${room.capacity}`);
      console.log(`   Cat√©gorie: ${room.category}`);

      if (!room.price || room.price <= 0) {
        console.log(`   ‚ùå PROBL√àME: Prix invalide ou manquant`);
        invalidRooms++;
      } else {
        console.log(`   ‚úÖ Prix valide`);
        validRooms++;
      }
    });

    console.log(`\nüìà R√©sum√©:`);
    console.log(`   Chambres valides: ${validRooms}`);
    console.log(`   Chambres avec probl√®me: ${invalidRooms}`);

    if (invalidRooms > 0) {
      console.log(`\nüîß Correction automatique des chambres avec prix invalide...`);
      
      const result = await Room.updateMany(
        {
          $or: [
            { price: { $exists: false } },
            { price: { $lte: 0 } },
            { price: { $type: 'null' } }
          ]
        },
        { $set: { price: 75000, isAvailable: true } }
      );
      
      console.log(`‚úÖ ${result.modifiedCount} chambres corrig√©es avec un prix de 75000 FCFA`);
    }

  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error);
  } finally {
    await mongoose.disconnect();
    console.log('üîå D√©connect√© de MongoDB');
  }
}

checkRooms(); 